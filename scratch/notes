#############
https://learn-to-code.workshop.aws/data_types/strings.html

### Read & write csv_file
https://www.youtube.com/watch?v=q5uM4VKywbA

##############################
http://www.swag.uwaterloo.ca/bash2py/index.html Docker image: https://hub.docker.com/r/imiell/bash2py/



https://stackoverflow.com/questions/61986280/aws-iam-how-to-show-describe-policy-statements-using-the-cli

RAW_POLICIES=$(aws iam list-policies **--scope Local** --query Policies[].[Arn,PolicyName,DefaultVersionId])
POLICIES=$(echo $RAW_POLICIES | tr -d " " | sed 's/\],/\]\n/g')
for POLICY in $POLICIES
    do echo $POLICY | cut -d '"' -f 4
    echo -e "---------------\n"
    aws iam get-policy-version --version-id $(echo $POLICY | cut -d '"' -f 6) --policy-arn $(echo $POLICY | cut -d '"' -f 2)
    echo -e "\n-----------------\n"
done

https://www.trendmicro.com/cloudoneconformity/knowledge-base/aws/IAM/iam-policy-for-administration.html

aws iam list-policies --scope Local --query "Policies[?PolicyName == 'djcom-internal-policy'].Arn"
aws iam list-policies --scope Local --query "Policies[?PolicyName == 'djcom-internal-policy'].Arn" --output text
#############################################
https://stackoverflow.com/questions/62593317/how-to-delete-an-iam-policy-with-multiple-versions-on-the-command-line-with-one

later check: https://registry.terraform.io/providers/hashicorp/aws/3.55.0/docs/data-sources/iam_roles
https://analyticshut.com/iam-policies-using-python-boto3-and-aws-cli/

setopt shwordsplitfunction iam-list-versions () { aws iam list-policy-versions --query "Versions[?@.IsDefaultVersion == \`false\`].VersionId" --policy-arn $1 --output text}function iam-delete-policy-versions () { iam-list-versions $1 | xargs -n 1 -I{} aws iam delete-

policy-version --policy-arn $1 --version-id {}}function iam-delete-policy () { iam-delete-policy-versions $1 aws iam delete-policy --policy-arn $1}
aws iam list-policies --scope Local --output text > /tmp/xxx
POLICIES        arn:aws:iam::510639184942:policy/rtnspoc        1       2021-04-22T16:34:22+00:00       v3      True    /       0       kANPAXNZDXTQXLJIRFWZW7   rtnspoc 2021-04-22T17:02:12+00:00
[root@ip-10-161-233-146 bin]# aws iam list-policy-versions --query "Versions[?@.IsDefaultVersion == \`false\`].VersionId" --policy-arn arn:aws:iam::510639184942:policy/rtnspoc --output text
v2      v1

for i in "${!ARR[@]}"; do
    aws acm describe-certificate --certificate-arn "${ARR[i]//\"}" | jq '. | {CertificateArn: .Certificate.CertificateArn,DomainName: .Certificate.DomainName, Type: .Certificate.Type, ValidationMethod: .Certificate.DomainValidationOptions[0].ValidationMethod, InUseBy: .Certificate.InUseBy}'
doneaws iam list-policies | jq -r '.Policies[] |select(.PolicyName)| .Arn'
aws iam list-policies --scope Local | jq -r '.Policies[] |select(.PolicyName)| .Arn'
* --query Policies[].[Arn,PolicyName,DefaultVersionId])[root@ip-10-161-233-146 bin]# aws iam list-policy-versions --query "Versions[?@.IsDefaultVersion == \`false\`].VersionId" --policy-arn arn:aws:iam::510639184942:policy/rtnspoc --output text
v3      v2      v1
#########################
arn:aws:iam::510639184942:policy/robinson-test-policy-versions
https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iam.html#IAM.Client.get_policy_version

response = client.delete_policy_version(
    PolicyArn='string',
    VersionId='string'
)
######################################
http://54.81.86.238/envs/django/lib/python3.8/site-packages/boto/iam/connection.py
def delete_policy_version(self, policy_arn, version_id):
    """
    Delete a policy version.

    :type policy_arn: string
    :param policy_arn: The ARN of the policy to delete a version from

    :type version_id: string
    :param version_id: The id of the version to delete

    """
    params = {'PolicyArn': policy_arn,
              'VersionId': version_id}
    return self.get_response('DeletePolicyVersion', params)
#####################################################
def list_policy_versions(self, policy_arn, marker=None, max_items=None):
    """
    List policy versions.

    :type policy_arn: string
    :param policy_arn: The ARN of the policy to get versions of

    :type marker: string
    :param marker: A marker used for pagination (received from previous
        accesses)

    :type max_items: int
    :param max_items: Send only max_items; allows paginations

    """
    params = {'PolicyArn': policy_arn}
    if marker is not None:
        params['Marker'] = marker
    if max_items is not None:
        params['MaxItems'] = max_items
    return self.get_response(
        'ListPolicyVersions',
        params,
        list_marker='Versions')

#############
boto3 youtbe tutoral https://www.youtube.com/watch?v=9occfhrM4gg

> use client mehtod for specific results --versionid's
(meta.client)

iam_ob=boto3.client('iam')
print (iam_ob.list_users.())

{'Users': [{'Path': '/', 'UserName': 'devuser', 'UserId': 'AIDASW5AHPOWHA26EWISC', 'Arn': 'arn:aws:iam::186630241196:user/devuser',
'CreateDate': datetime.datetime(2021, 10, 29, 22, 46, 42, tzinfo=tzlocal())}, {'Path': '/', 'UserName': 'paul.eric.robinson',
'UserId': 'AIDASW5AHPOWBUZJG6IDV', 'Arn': 'arn:aws:iam::186630241196:user/paul.eric.robinson', 'CreateDate': datetime.datetime(2019, 12, 18, 14, 59, 29, tzinfo=tzlocal())}


delete_policy_version
get_policy_version
list_policy_versions
set_default_policy_version

Note:  am_ob=boto3.resource('iam') will NOT provide Policy_versions must use iam_ob=boto3.client('iam')
Key=Policies

working list Policies need to limit scope next
iam_ob=boto3.client('iam')
#print (iam_ob.list_policies())
for each_policy in iam_ob.list_policies()['Policies']:
    print (each_policy['PolicyName'])


    AccountId,AccountName,DestRoleName
    186630241196,Robinson-Home,nct_cse_prod_tools_role


## Play tutorial Next https://www.youtube.com/watch?v=LzYNWme1W6Q
